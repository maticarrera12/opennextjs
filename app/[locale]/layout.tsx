import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "../globals.css";
import { Toaster } from "sonner";
import { headers } from "next/headers";
import { ThemeProvider } from "@/components/navbar/theme-provider";
import { NextIntlClientProvider } from "next-intl";
import { auth } from "@/lib/auth";
import { Analytics } from "@vercel/analytics/next";
import { SpeedInsights } from "@vercel/speed-insights/next";
const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Open Next",
  description: "Generated by Matías Carrera",
};

export default async function LocaleLayout({
  children,
  params,
}: {
  children: React.ReactNode;
  params: Promise<{ locale: string }>;
}) {
  const { locale } = await params;
  const messages = (await import(`@/messages/${locale}.json`)).default;

  const session = await auth.api.getSession({
    headers: await headers(),
  });

  return (
    <html lang={locale}>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <NextIntlClientProvider locale={locale} messages={messages}>
          <ThemeProvider attribute="class" defaultTheme="system" enableSystem>
            {children}
            <Toaster position="top-right" richColors />
            <Analytics />
            <SpeedInsights />
          </ThemeProvider>
        </NextIntlClientProvider>
      </body>
    </html>
  );
}

// suppressHydrationWarning is used to prevent the hydration warning by next-themes
// import type { Metadata } from "next";
// import { Geist, Geist_Mono } from "next/font/google";
// import "../globals.css";
// import { Toaster } from "sonner";
// import { headers } from "next/headers";
// import { ThemeProvider } from "@/components/theme-provider";
// import { NextIntlClientProvider } from "next-intl";
// import { auth } from "@/lib/auth";

// const geistSans = Geist({
//   variable: "--font-geist-sans",
//   subsets: ["latin"],
// });

// const geistMono = Geist_Mono({
//   variable: "--font-geist-mono",
//   subsets: ["latin"],
// });

// export const metadata: Metadata = {
//   title: "Open Next",
//   description: "Generated by Matías Carrera",
// };

// export default async function LocaleLayout({
//   children,
//   params,
// }: {
//   children: React.ReactNode;
//   params: Promise<{ locale: string }>;
// }) {
//   const { locale } = await params;
//   const messages = (await import(`@/messages/${locale}.json`)).default;

//   const session = await auth.api.getSession({
//     headers: await headers(),
//   });

//   return (
//
//     <html lang={locale} suppressHydrationWarning>
//       <body
//         className={`${geistSans.variable} ${geistMono.variable} antialiased`}
//         suppressHydrationWarning
//       >
//         <NextIntlClientProvider locale={locale} messages={messages}>
//           <ThemeProvider
//             attribute="class"
//             defaultTheme="system"
//             enableSystem
//             disableTransitionOnChange
//           >
//             {children}
//             <Toaster position="top-right" richColors />
//           </ThemeProvider>
//         </NextIntlClientProvider>
//       </body>
//     </html>
//   );
// }
